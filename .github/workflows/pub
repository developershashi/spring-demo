import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.jms.*;

import static org.mockito.Mockito.*;

public class JmsPublisherTest {

    @InjectMocks
    private JmsPublisher jmsPublisher;

    @Mock
    private ConnectionFactory connectionFactory;

    @Mock
    private Connection connection;

    @Mock
    private Session session;

    @Mock
    private MessageProducer messageProducer;

    @Mock
    private TextMessage textMessage;

    @Before
    public void setUp() throws JMSException {
        MockitoAnnotations.initMocks(this);

        when(connectionFactory.createConnection()).thenReturn(connection);
        when(connection.createSession(true, Session.AUTO_ACKNOWLEDGE)).thenReturn(session);
        when(session.createProducer(any(Destination.class))).thenReturn(messageProducer);
        when(session.createTextMessage()).thenReturn(textMessage);
    }

    @Test
    public void testPublishValidMessage() throws JMSException {
        String validMessage = "Hello, World!";
        
        jmsPublisher.publish(validMessage);
        
        verify(textMessage).setText(validMessage);
        verify(messageProducer).setDeliveryMode(DeliveryMode.PERSISTENT);
        verify(messageProducer).send(textMessage);
        verify(session).commit();
    }

    @Test
    public void testPublishEmptyMessage() throws JMSException {
        String emptyMessage = "";
        
        jmsPublisher.publish(emptyMessage);
        
        verifyZeroInteractions(textMessage);
        verifyZeroInteractions(messageProducer);
        verifyZeroInteractions(session);
    }

    @Test
    public void testPublishNullMessage() throws JMSException {
        String nullMessage = null;
        
        jmsPublisher.publish(nullMessage);
        
        verifyZeroInteractions(textMessage);
        verifyZeroInteractions(messageProducer);
        verifyZeroInteractions(session);
    }

    @Test(expected = JMSException.class)
    public void testPublishJMSException() throws JMSException {
        String validMessage = "Hello, World!";
        doThrow(new JMSException("Test JMSException")).when(textMessage).setText(anyString());
        
        jmsPublisher.publish(validMessage);
    }
}
